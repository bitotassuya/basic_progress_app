{"version":3,"sources":["components/inputTodo.js","components/EditTodo.js","components/ListTodos.js","App.js","index.js"],"names":["InputTodo","_useState","useState","_useState2","Object","slicedToArray","description","setDescription","onSubmitForm","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","element","body","response","wrap","_context","prev","next","preventDefault","fetch","method","headers","Content-Type","JSON","stringify","sent","window","location","console","log","t0","error","message","stop","_x","apply","this","arguments","react_default","createElement","react","className","onSubmit","type","value","onChange","target","EditTodo","todo","updateDescription","_ref2","e","concat","todo_id","data-bs-toggle","data-bs-target","id","onClick","data-dismiss","ListTodos","todos","setTodos","deleteTodo","_deleteTodo","filter","getTodos","_callee2","jsonData","_context2","json","useEffect","map","key","components_EditTodo","App","inputTodo","components_ListTodos","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2b95b7b9.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\n\r\n\r\nconst InputTodo = () => {\r\n    //setDefault in textInput\r\n    const [description, setDescription] = useState(\"\");\r\n\r\n    const onSubmitForm = async element => {\r\n        element.preventDefault();\r\n\r\n        try {\r\n            const body = { description };\r\n            const response = await fetch(\"http://localhost:5000/todos\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            window.location = \"/\";\r\n            console.log(response);\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className=\"text-center mt-5\">Pern Todo List</h1>\r\n            <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    value={description}\r\n                    onChange={element => setDescription(element.target.value)} />\r\n                <button className=\"btn btn-warning\">Add</button>\r\n\r\n            </form>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default InputTodo;","import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditTodo = ({ todo }) => {\r\n    const [description, setDescription] = useState(todo.description);\r\n\r\n    //edit description function\r\n\r\n    const updateDescription = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { description };\r\n            const response = await fetch(\r\n                `http://localhost:5000/todos/${todo.todo_id}`,\r\n                {\r\n                    method: \"PUT\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(body)\r\n                }\r\n            );\r\n\r\n            window.location = \"/\";\r\n            console.log(response);\r\n\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target={`#id${todo.todo_id}`}\r\n            >\r\n                Edit\r\n            </button>\r\n\r\n            {/* \r\n        id = id10\r\n      */}\r\n            <div\r\n                className=\"modal\"\r\n                id={`id${todo.todo_id}`}\r\n                onClick={() => setDescription(todo.description)}\r\n            >\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title\">Edit Todo</h4>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"close\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setDescription(todo.description)}\r\n                            >\r\n                                &times;\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                value={description}\r\n                                onChange={e => setDescription(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-warning\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={e => updateDescription(e)}\r\n                            >\r\n                                Edit\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-danger\"\r\n                                data-dismiss=\"modal\"\r\n                                onClick={() => setDescription(todo.description)}\r\n                            >\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default EditTodo;","import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst ListTodos = () => {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    //delete todo function\r\n\r\n    const deleteTodo = async id => {\r\n        try {\r\n            const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n            console.log(deleteTodo);\r\n\r\n            setTodos(todos.filter(todo => todo.todo_id !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const getTodos = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/todos\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <table className=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/*<tr>\r\n            <td>John</td>\r\n            <td>Doe</td>\r\n            <td>john@example.com</td>\r\n          </tr> */}\r\n                    {todos.map(todo => (\r\n                        <tr key={todo.todo_id}>\r\n                            <td>{todo.description}</td>\r\n                            <td>\r\n                                <EditTodo todo={todo} />\r\n                            </td>\r\n                            <td>\r\n                                <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteTodo(todo.todo_id)}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListTodos;","import React, { Fragment } from \"react\";\nimport './App.css';\n\n//components\n\nimport InputTodo from \"./components/inputTodo\";\nimport ListTodos from \"./components/ListTodos\";\n\nfunction App() {\n  return (\n    <div>\n      <Fragment>\n        <div className=\"container\">\n\n          <InputTodo />\n          <ListTodos />\n\n        </div>\n\n      </Fragment></div>\n\n\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}